group_by(year) %>%
summarize(year_num = sum())
#
inclusive_poverty_gdp %>%
group_by(year) %>%
summarize(year_num = sum(`country name`))
#
inclusive_poverty_gdp %>%
group_by(year) %>%
summarize(year_num = n())
# Reviewing data to decide research design (panel data vs cross sectional data)
inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarize(year_per_country = year)
# Reviewing data to decide research design (panel data vs cross sectional data)
inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarize(year_per_country = year) %>%
print()
# Reviewing data to decide research design (panel data vs cross sectional data)
inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarize(year_per_country = year) %>%
print(n = 189)
# Reviewing data to decide research design (panel data vs cross sectional data)
inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarize(total_num_country = n())
# Reviewing data to decide research design (panel data vs cross sectional data)
total_countries <- length(unique(data$country.name))
# Reviewing data to decide research design (panel data vs cross sectional data)
total_countries <- inclusive_poverty_gdp %>% length(unique(`country name`))
# Loading the final dataset
inclusive_poverty_gdp <- read_csv("data/inclusive_poverty_gdp.csv")
# Reviewing data to decide research design (panel data vs cross sectional data)
total_countries <- inclusive_poverty_gdp %>% length(unique(`country name`))
# Reviewing data to decide research design (panel data vs cross sectional data)
total_countries <-  length(unique(inclusive_poverty_gdp$`country name`))
yearly_country_count <- data %>%
group_by(year) %>%
summarize(country_count = n_distinct(country.name))
yearly_country_count <- data %>%
group_by(year) %>%
summarise(country_count = n_distinct(country.name))
# For research design, create a table summarizing a total number of country and
# the number of observation across yearsto decide either using panel data or
# cross sectional data
total_countries <-  length(unique(inclusive_poverty_gdp$`country name`))
yearly_country_count <- data %>%
group_by(year) %>%
summarise(country_count = n_distinct(country.name))
yearly_country_count <- inclusive_poverty_gdp %>%
group_by(year) %>%
summarise(country_count = n_distinct(country.name))
yearly_country_count <- inclusive_poverty_gdp %>%
group_by(year) %>%
summarise(country_count = n_distinct(`country name`))
table_yearly_country <- yearly_country_count %>%
mutate(total_countries = total_countries)
table_yearly_country <- yearly_country_count %>%
mutate(total_countries = total_countries) %>% print()
country_year_count <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
mutate(category = case_when(
year_count == 3 ~ "All years (2014, 2017, 2021)",
year_count == 2 ~ "Two years only",
year_count == 1 ~ "One year only"
),
total_countries = length(unique(`country name`)))
# 테이블 형태로 정리
result_table <- country_year_count %>%
group_by(category) %>%
summarise(
countries = paste(country.name, collapse = ", "),
count = n()
)
# 테이블 형태로 정리
result_table <- country_year_count %>%
group_by(category) %>%
summarise(
countries = paste(`country name`, collapse = ", "),
count = n()
)
# 출력
print(result_table)
# For research design, create a table summarizing yearly country counts
# to decide either using panel data or cross sectional data
country_year_count <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
mutate(category = case_when(
year_count == 3 ~ "All years (2014, 2017, 2021)",
year_count == 2 ~ "Two years only",
year_count == 1 ~ "One year only"
))
category_counts <- country_year_count %>%
group_by(category) %>%
summarise(count = n())
year_counts <- inclusive_poverty_gdp %>%
group_by(year) %>%
summarise(country_count = n_distinct(`country name`)) %>%
pivot_wider(names_from = year, values_from = country_count, names_prefix = "year_")
total_countries <- inclusive_poverty_gdp %>%
summarise(total_countries = n_distinct(country.name))
total_countries <- inclusive_poverty_gdp %>%
summarise(total_countries = n_distinct(`country name`))
table_yearly_country <- bind_cols(category_counts, total_countries, year_counts) %>% print()
summarise(country_count = n_distinct(`country name`)
table_yearly_country <- bind_raws(category_counts, total_countries, year_counts) %>% print()
# For research design, create a table summarizing yearly country counts
# to decide either using panel data or cross sectional data
country_year_count <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
mutate(total_country = n()) %>%
summarise(year_count = n_distinct(year)) %>%
mutate(category = case_when(
year_count == 3 ~ "All years (2014, 2017, 2021)",
year_count == 2 ~ "Two years only",
year_count == 1 ~ "One year only"
))
country_year_count
# For research design, create a table summarizing yearly country counts
# to decide either using panel data or cross sectional data
## the total number of countries
total_countries <- n_distinct(inclusive_poverty_gdp$`country name`)
# For research design, create a table summarizing yearly country counts
# to decide either using panel data or cross sectional data
## the total number of countries
total_countries <- n_distinct(inclusive_poverty_gdp$`country name`)
# the number of countries by the number of year data each country has
all_years_countries <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 3) %>%
nrow()
two_years_countries <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 2) %>%
nrow()
one_year_countries <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 1) %>%
nrow()
# count yearly country
yearly_country_count <- inclusive_poverty_gdp %>%
group_by(year) %>%
summarise(
yearly_countries = n_distinct(`country name`)
) %>%
mutate(
total_countries = total_countries,
countries_missing_years = total_countries - number_of_countries,
countries_all_years = all_years_countries,
countries_two_years_only = two_years_countries,
countries_one_year_only = one_year_countries
)
# count yearly country
yearly_country_count <- inclusive_poverty_gdp %>%
group_by(year) %>%
summarise(
yearly_countries = n_distinct(`country name`)
) %>%
mutate(
total_countries = total_countries,
countries_missing_years = total_countries - yearly_countries,
countries_all_years = all_years_countries,
countries_two_years_only = two_years_countries,
countries_one_year_only = one_year_countries
)
print(yearly_country_count)
view(yearly_country_count)
three_years_only %>% inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3)
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3)
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3) %>%
group_by(`income group`)
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3) %>%
group_by(`income group`) %>%
view()
# Data cleaning to test fixed effect model fit
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3)
inclusive_poverty_gdp <- read_csv(paste0(data_path, "inclusive_poverty.gdp.csv"))
# Load and retrieve raw data
## Define data folder path
data_path <- "/Users/yeong/Documents/GitHub/R-II_final/data/"
inclusive_poverty_gdp <- read_csv(paste0(data_path, "inclusive_poverty.gdp.csv"))
inclusive_poverty_gdp <- read_csv(paste0(data_path, "inclusive_poverty_gdp.csv"))
# Create a table to look at yearly country counts for the research design
# to decide either using panel data or cross sectional data
## The total number of countries
total_countries <- n_distinct(inclusive_poverty_gdp$`country name`)
## The number of countries by the number of years per country
all_years_countries <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 3) %>%
nrow()
two_years_countries <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 2) %>%
nrow()
one_year_countries <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 1) %>%
nrow()
## Count yearly country
yearly_country_count <- inclusive_poverty_gdp %>%
group_by(year) %>%
summarise(
yearly_countries = n_distinct(`country name`)
) %>%
mutate(
total_countries = total_countries,
countries_missing_years = total_countries - yearly_countries,
countries_all_years = all_years_countries,
countries_two_years_only = two_years_countries,
countries_one_year_only = one_year_countries
)
view(yearly_country_count)
# Data cleaning ready for the model fitting (fixed-effect panel regression model)
## filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3)
## Log transform gdp to reduce skewness
log_gdp <- three_years_only %>%
mutate(log_gdp = log(gdp))
## Log transform gdp to reduce skewness
log_gdp <- three_years_only %>%
mutate(log_gdp = log(gdp)) %>%
view()
missing_summary <- three_years_only %>%
summarise(across(everything(), ~ sum(is.na(.)), .names = "missing_{.col}"))
print(missing_summary)
view(missing_summary)
## Write the filtered dataset
write_csv(three_years_only, paste0(data_path, "inclusive_poverty_gdp_model.csv"))
# Load the prepared dataset
data <- read_csv("data/inclusive_poverty_gdp_model.csv")
inclusive_poverty_gdp <- read_csv(paste0(data_path, "inclusive_poverty_gdp.csv"))
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3)
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
filter(n_distinct(year) == 3) %>%
view()
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 3)
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
summarise(year_count = n_distinct(year)) %>%
filter(year_count == 3) %>%
view()
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
group_by(country name`) %>%
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
filter(n_distinct(year)) == 3)
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
filter(n_distinct(year) == 3)
# Prepare data for the model fitting (fixed-effect panel regression model)
## Filter countries having 3 years
three_years_only <- inclusive_poverty_gdp %>%
group_by(`country name`) %>%
filter(n_distinct(year) == 3) %>%
view()
# Load the prepared dataset
data <- read_csv("data/inclusive_poverty_gdp_model.csv")
## Write the filtered dataset
write_csv(three_years_only, paste0(data_path, "inclusive_poverty_gdp_model.csv"))
# Load the prepared dataset
data <- read_csv("data/inclusive_poverty_gdp_model.csv")
library(plm)
# Model fit (Fixed Effects Model)
fe_model <- plm(
poverty_headcount_ratio ~ per_account_ownership_poor + per_saving_poor +
per_borrowing_poor + per_digital_payment_poor + gdp,
data = data,
index = c("country.name", "year"),
model = "within"
)
# Summary of the model
summary(fe_model))
# Summary of the model
summary(fe_model)
library(stargazer)
# Clustering standard error
clustered_se <- vcovHC(fe_model, method = "arellano", type = "HC0", cluster = "group")
# Summary
summary_with_cluster_se <- coeftest(fe_model, vcov = clustered_se)
library(lmtest)
# Summary
summary_with_cluster_se <- coeftest(fe_model, vcov = clustered_se)
# 결과 출력
print(summary_with_cluster_se)
se_clustered <- sqrt(diag(clustered_se))
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "text",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Poor)",
"Savings (Poor)",
"Borrowing (Poor)",
"Digital Payments (Poor)",
"Log GDP"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
view(data)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "text",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"GDP"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
style_file("/Users/yeong/Documents/GitHub/R-II_final/data.R")
library(styler)
style_file("/Users/yeong/Documents/GitHub/R-II_final/data.R")
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "text",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "http",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "html",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "latex",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
library(latex)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "text",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "html",
out = "model_results.html",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "latex",
out = "model_results.tex,
dep.var.labels = "Poverty Headcount Ratio",
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "latex",
out = "model_results.tex",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "html",
out = "model_results.html"
dep.var.labels = "Poverty Headcount Ratio",
# Create a summary table
stargazer(
fe_model,
se = list(se_clustered),
type = "html",
out = "model_results.html",
dep.var.labels = "Poverty Headcount Ratio",
covariate.labels = c(
"Account Ownership (Income, poorest 40% (% ages 15+))",
"Savings (Income, poorest 40% (% ages 15+))",
"Borrowing (Income, poorest 40% (% ages 15+))",
"Digital Payments (Income, poorest 40% (% ages 15+))",
"Real GDP Growth"
),
title = "Fixed Effects Model with Clustered Standard Errors",
align = TRUE,
no.space = TRUE
)
