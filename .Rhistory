plotlyOutput("income_plot")
)
)
)
# Create a world map to filter income group (low, middle, high-income level)
# and compare financial inclusion across wealthier and poorer countries for the poor
## Define ui
ui_2 <- fluidPage(
titlePanel("Financial Inclusion across Income Level in the World"),
sidebarLayout(
sidebarPanel(
tags$img(src = "https://d11jve6usk2wa9.cloudfront.net/platform/10747/assets/logo.png",
height = 80,
width = 220),
selectInput(inputId = "income_input", label = "Income Level", choices = NULL),
selectInput(inputId = "metric_input", label = "Metric", choices = NULL),
),
mainPanel(
plotlyOutput("income_plot")
)
)
)
# Filter by income level
if (!is.null(input$income_input) && input$income_input != "") {
data <- data[data$`income group` == input$income_input, ]
}
# Filter by year
if (!is.null(input$metric_input) && input$metric_input != "") {
data <- data[data$metric == input$metric_input, ]
}
### Reactive filtered data based on user inputs
filtered <- reactive({
data <- inclusive_poverty_gdp_sf
# Filter by income level
if (!is.null(input$income_input) && input$income_input != "") {
data <- data[data$`income group` == input$income_input, ]
}
# Filter by year
if (!is.null(input$metric_input) && input$metric_input != "") {
data <- data[data$metric == input$metric_input, ]
}
print(data)
data
})
### call the resulting dataframe filtered
observeEvent(input$income_input, {
filtered_data <- inclusive_poverty_gdp_sf[inclusive_poverty_gdp_sf$`income group` == input$income_input, ]
metric_choices <- unique(filtered_data$metric)
updateSelectInput(session, "metric_input", choices = c("All Metrics" = "", metric_choices))
})
filtered_data <- inclusive_poverty_gdp_sf[inclusive_poverty_gdp_sf$`income group` == input$income_input, ]
ggplot() +
geom_sf(data = world_map) +
geom_sf(
data = if (input$income_input == "") {
filtered()
} else {
filtered() %>% filter(`income group` == input$income_input)
},
aes(fill = value), shape = 21, size = 2
) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Financial Inclusion acoss Income Level in the World",
x = "Longitude", y = "Latitude",
fill = "Percent",
caption = "Source: World Bank"
) +
theme_minimal()
## Define server logic
server_2 <- function(input, output, session) {
world_map <- st_read("data/ne_10m_admin_0_countries.shp")
inclusive_poverty_gdp_sf <- st_as_sf(inclusive_poverty_gdp_long,
coords = c("longitude", "latitude"),
crs = st_crs(world_map), remove = FALSE)
observe({
income_choices <- unique(inclusive_poverty_gdp_sf$`income group`)
updateSelectInput(session, "income_input", choices = income_choices)
})
### Reactive filtered data based on user inputs
filtered <- reactive({
data <- inclusive_poverty_gdp_sf
# Filter by income level
if (!is.null(input$income_input) && input$income_input != "") {
data <- data[data$`income group` == input$income_input, ]
}
# Filter by year
if (!is.null(input$metric_input) && input$metric_input != "") {
data <- data[data$metric == input$metric_input, ]
}
print(data)
data
})
### call the resulting dataframe filtered
observeEvent(input$income_input, {
filtered_data <- inclusive_poverty_gdp_sf[inclusive_poverty_gdp_sf$`income group` == input$income_input, ]
metric_choices <- unique(filtered_data$metric)
updateSelectInput(session, "metric_input", choices = c("All Metrics" = "", metric_choices))
})
### Render the plot
output$country_plot <- renderPlotly({
ggplot() +
geom_sf(data = world_map) +
geom_sf(
data = if (input$income_input == "") {
filtered()
} else {
filtered() %>% filter(`income group` == input$income_input)
},
aes(fill = value), shape = 21, size = 2
) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Financial Inclusion acoss Income Level in the World",
x = "Longitude", y = "Latitude",
fill = "Percent",
caption = "Source: World Bank"
) +
theme_minimal()
})
}
## Run the app
shinyApp(ui = ui_2, server = server_2)
## Define server logic
server_2 <- function(input, output, session) {
world_map <- st_read("data/ne_10m_admin_0_countries.shp")
inclusive_poverty_gdp_sf <- st_as_sf(inclusive_poverty_gdp_long,
coords = c("longitude", "latitude"),
crs = st_crs(world_map), remove = FALSE)
observe({
income_choices <- unique(inclusive_poverty_gdp_sf$`income group`)
updateSelectInput(session, "income_input", choices = income_choices)
})
### Reactive filtered data based on user inputs
filtered <- reactive({
data <- inclusive_poverty_gdp_sf
# Filter by income level
if (!is.null(input$income_input) && input$income_input != "") {
data <- data[data$`income group` == input$income_input, ]
}
# Filter by year
if (!is.null(input$metric_input) && input$metric_input != "") {
data <- data[data$metric == input$metric_input, ]
}
print(data)
data
})
### call the resulting dataframe filtered
observeEvent(input$income_input, {
filtered_data <- inclusive_poverty_gdp_sf[inclusive_poverty_gdp_sf$`income group` == input$income_input, ]
metric_choices <- unique(filtered_data$metric)
updateSelectInput(session, "metric_input", choices = c("All Metrics" = "", metric_choices))
})
### Render the plot
output$country_plot <- renderPlotly({
ggplot() +
geom_sf(data = world_map) +
geom_sf(
data = if (input$income_input == "") {
filtered()
} else {
filtered() %>% filter(`income group` == input$income_input)
},
aes(fill = value), shape = 21, size = 2
) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Financial Inclusion acoss Income Level in the World",
x = "Longitude", y = "Latitude",
fill = "Percent",
caption = "Source: World Bank"
) +
theme_minimal()
})
}
## Run the app
shinyApp(ui = ui_2, server = server_2)
## Run the app
shinyApp(ui = ui_2, server = server_2)
## Run the app
shinyApp(ui = ui_2, server = server_2)
ggplot() +
geom_sf(data = filtered(), aes(fill = value), color = "black", shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal()
ggplot(data = world_map) +
geom_sf(fill = "gray95", color = "gray80") +
labs(title = "World Map Test", x = "Longitude", y = "Latitude") +
theme_minimal()
ggplot(data = world_map) +
geom_sf(fill = "gray95", color = "gray80") +
labs(title = "World Map Test", x = "Longitude", y = "Latitude") +
theme_minimal()
library(sf)
ggplot(data = world_map) +
geom_sf(fill = "gray95", color = "gray80") +
labs(title = "World Map Test", x = "Longitude", y = "Latitude") +
theme_minimal()
ggplot(data = world_map) +
geom_sf(fill = "gray95", color = "gray80") +
labs(title = "World Map Test", x = "Longitude", y = "Latitude") +
theme_minimal()
ggplot(data = world_map) +
geom_sf(fill = "gray95", color = "gray80") +
labs(title = "World Map Test", x = "Longitude", y = "Latitude") +
theme_minimal()
library(tidyverse)
library(sf)
library(shiny)
library(plotly)
ggplot(data = world_map) +
geom_sf(fill = "gray95", color = "gray80") +
labs(title = "World Map Test", x = "Longitude", y = "Latitude") +
theme_minimal()
## Run the app
shinyApp(ui = ui_2, server = server_2)
# Creating a plot analyzing natural language
world_map <- st_read("data/ne_10m_admin_0_countries.shp")
inclusive_poverty_gdp_sf <- st_as_sf(inclusive_poverty_gdp_long,
coords = c("longitude", "latitude"),
crs = st_crs(world_map), remove = FALSE)
choropleth_inclusion_by_income <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Location of Public Schools by Safety Scores in Chicago",
fill = "Safety Score",
x = "Longitude", y = "Latitude",
caption = "Source: the City of Chicago"
) +
theme_minimal()
choropleth_inclusion_by_income
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme_minimal()
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme_minimal()
choropleth_inclusion_by_income <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 0.5) +
scale_fill_gradient(low = "white", high = "blue") +
facet_wrap(~metric) +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme_minimal()
choropleth_inclusion_by_income
print(plot_financial_inclusion_by_poverty)
style_file("/Users/yeong/Documents/GitHub/R-II_final/staticplot.R")
theme_minimal()
choropleth_inclusion_by_income <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 0.5) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)) +
theme_minimal()
choropleth_inclusion_by_income
choropleth_inclusion_by_income <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 1) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)) +
theme_minimal()
choropleth_inclusion_by_income
ggsave("choropleth_inclusion_by_income.png", path = "images")
ggsave("plot_financial_inclusion_by_poverty.png", path = "images")
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
plot_financial_inclusion_by_poverty <- inclusive_poverty_gdp_long %>%
ggplot(aes(x = poverty_headcount_ratio, y = value, color = metric)) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
facet_wrap(~year) +
labs(
title = "Trends in Financial Inclusion vs Poverty across Years",
x = "Poverty Headcount Ratio",
y = "Financial Inclusion for income, poorest 40% (% ages 15+)",
color = "Metric"
) +
theme_minimal()
)
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 9)
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 15)
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 10)
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 8, height = 10)
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 12)
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 20)
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 10)
choropleth_inclusion_by_income <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)) +
theme_minimal()
ggsave("choropleth_inclusion_by_income.png", path = "images", plot = choropleth_inclusion_by_income, width = 10, height = 10)
plot_financial_inclusion_by_poverty <- inclusive_poverty_gdp_long %>%
ggplot(aes(x = poverty_headcount_ratio, y = value, color = metric)) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
facet_wrap(~year) +
labs(
title = "Trends in Financial Inclusion vs Poverty across Years",
x = "Poverty Headcount Ratio",
y = "Financial Inclusion for income, poorest 40% (% ages 15+)",
color = "Metric"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)) +
theme_minimal()
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
plot_financial_inclusion_by_poverty <- inclusive_poverty_gdp_long %>%
ggplot(aes(x = poverty_headcount_ratio, y = value, color = metric)) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
facet_wrap(~year) +
labs(
title = "Trends in Financial Inclusion vs Poverty across Years",
x = "Poverty Headcount Ratio",
y = "Financial Inclusion for income, poorest 40% (% ages 15+)",
color = "Metric"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)) +
theme_minimal()
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
# Creating a plot financial inclusion for the poor vs poverty headcount ratio across years
plot_financial_inclusion_by_poverty <- inclusive_poverty_gdp_long %>%
ggplot(aes(x = poverty_headcount_ratio, y = value, color = metric)) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
facet_wrap(~year) +
labs(
title = "Trends in Financial Inclusion vs Poverty across Years",
x = "Poverty Headcount Ratio",
y = "Financial Inclusion for income, poorest 40% (% ages 15+)",
color = "Metric"
) +
theme_minimal() +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
legend.key.size = unit(0.5, "cm")
) +
guides(
color = guide_legend(nrow = 2, byrow = TRUE)
)
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
# Creating a plot financial inclusion for the poor vs poverty headcount ratio across years
plot_financial_inclusion_by_poverty <- inclusive_poverty_gdp_long %>%
ggplot(aes(x = poverty_headcount_ratio, y = value, color = metric)) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
facet_wrap(~year) +
labs(
title = "Trends in Financial Inclusion vs Poverty across Years",
x = "Poverty Headcount Ratio",
y = "Financial Inclusion for income, poorest 40% (% ages 15+)",
color = "Metric"
) +
theme_minimal() +
theme(
strip.text = element_text(size = 10),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
legend.key.size = unit(0.5, "cm")
) +
guides(
color = guide_legend(nrow = 2, byrow = TRUE)
)
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
choropleth_inclusion_by_income <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)) +
theme_minimal()
ggsave("choropleth_inclusion_by_income.png", plot = choropleth_inclusion_by_income, path = "images", width = 10, height = 10)
style_file("/Users/yeong/Documents/GitHub/R-II_final/staticplot.R")
library(tidyverse)
library(styler)
style_file("/Users/yeong/Documents/GitHub/R-II_final/staticplot.R")
choropleth_inclusion <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)
) +
theme_minimal()
library(tidyverse)
choropleth_inclusion <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)
) +
theme_minimal()
ggsave("choropleth_inclusion.png", plot = choropleth_inclusion, path = "images", width = 10, height = 10)
choropleth_financial_inclusion <- ggplot() +
geom_sf(data = world_map) +
geom_sf(data = inclusive_poverty_gdp_sf, aes(fill = value), shape = 21, size = 2) +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Choropleth for Financial Inclusion in the World",
fill = "Percent",
x = "Longitude", y = "Latitude",
caption = "Source: World Bank"
) +
theme(
strip.text = element_text(size = 10, face = "bold"),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10)
) +
theme_minimal()
ggsave("choropleth_financial_inclusion.png", plot = choropleth_financial_inclusion, path = "images", width = 10, height = 10)
# Creating a plot financial inclusion for the poor vs poverty headcount ratio across years
plot_financial_inclusion_by_poverty <- inclusive_poverty_gdp_long %>%
ggplot(aes(x = poverty_headcount_ratio, y = value, color = metric)) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
facet_wrap(~year) +
labs(
title = "Trends in Financial Inclusion vs Poverty across Years",
x = "Poverty Headcount Ratio",
y = "Estimated Financial Inclusion (from LM)",
color = "Metric"
) +
theme_minimal() +
theme(
strip.text = element_text(size = 10),
plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 10),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
legend.key.size = unit(0.5, "cm")
) +
guides(
color = guide_legend(nrow = 2, byrow = TRUE)
)
ggsave("plot_financial_inclusion_by_poverty.png", plot = plot_financial_inclusion_by_poverty, path = "images")
